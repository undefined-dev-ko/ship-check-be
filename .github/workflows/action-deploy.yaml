name: deploy-be
on:
  workflow_dispatch:
  push:
    branches:
      - release
jobs:
  deploy:
    runs-on: self-hosted
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # 프로덕션 환경에 원하는 환경변수를 세팅하기위해 어쩔 수 없이 무식한 방법을 동원!
      - name: Create dot env file
        run: |
          chmod +x ./tools/setupProdEnv.sh
          ./tools/setupProdEnv.sh
        env:
          SECRET: ${{ secrets.SECRET}}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID}}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET}}
          GOOGLE_REDIRECT_URL: ${{ secrets.GOOGLE_REDIRECT_URL}}
          PORT: ${{ secrets.PORT}}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST}}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT}}
          DATABASE_DB: ${{ secrets.DATABASE_DB}}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME}}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD}}
      # 배포
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v5.0.3
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SECRET }}
          ARGS: "-rlgoDzvc -i --delete"
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USER }}
          EXCLUDE: "/dist/, /node_modules/"
          SOURCE: "./"
          TARGET: "/custom/newhome/shipcheck/"
          SCRIPT_BEFORE: |
            whoami
            mkdir -p /custom/newhome/shipcheck
            mkdir -p /custom/newhome/shipcheck-db
            cd /custom/newhome/shipcheck
            sudo docker-compose down
          SCRIPT_AFTER: |
            whoami
            echo $RSYNC_STDOUT
            cd /custom/newhome/shipcheck
            sudo docker-compose -f docker-compose-db.yml up --no-recreate -d
            sudo docker-compose up -d --build
            sudo docker image prune -a -f
